import { Slot, component$, useSignal, useStyles$, useVisibleTask$ } from "@builder.io/qwik";
import type { DocumentHead } from "@builder.io/qwik-city";
import type { RequestHandler } from "@builder.io/qwik-city";
import styles from './styles.css?inline';

export const onGet: RequestHandler = async ({ cacheControl }) => {
  // Control caching for this request for best performance and to reduce hosting costs:
  // https://qwik.builder.io/docs/caching/
  cacheControl({
    // Always serve a cached response by default, up to a week stale
    staleWhileRevalidate: 60 * 60 * 24 * 7,
    // Max once every 5 seconds, revalidate on the server to get a fresh version of this page
    maxAge: 5,
  });
};



export default component$(() => {
  useStyles$(styles);
  return (
    <main>
      <div style={{display: 'flex', background: 'grey', width: '100vw', height: '100vh', contain: 'strict'}}>
        <div style={{margin: 'auto', width: 'fit-content'}}>First View</div>
      </div>
      <div style={{
        background: 'black', 
        color: 'white', 
      }}>
        {Array(10).fill(null).map((_, i) => (
          <Container key={i}>
            {Array(10000).fill(null).map((_, j) => (
              <div key={j} style={{
                contentVisibility: 'auto',
                containIntrinsicSize: '0 10px',
              }}>
                Hello World
              </div>
            ))}
          </Container>
        ))}
      </div>
    </main>
  );
});

const Container = component$(() => {
  const visible = useSignal(false);

  // hide until visible
  // eslint-disable-next-line qwik/no-use-visible-task
  useVisibleTask$(() => {
    visible.value = true;
  });

  if(!visible.value) return null

  return <Slot />
})

export const head: DocumentHead = {
  title: "Create Qwik App",
  meta: [
    {
      name: "description",
      content: "Generated by create next app",
    },
  ],
};

